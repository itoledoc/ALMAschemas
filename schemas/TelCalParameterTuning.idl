/*
 * ALMA - Atacama Large Millimiter Array
 * (c) European Southern Observatory, 2002
 * (c) Associated Universities Inc., 2002
 * Copyright by ESO (in the framework of the ALMA collaboration),
 * All rights reserved
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 * 
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 * 
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
 * MA 02111-1307  USA
 * 
 * File ParameterTuning.idl
 * 
 */

#ifndef _PARAMETER_TUNING_IDL_
#define _PARAMETER_TUNING_IDL_


#include <acscomponent.idl>
#include <TelCalErrType.idl>

#pragma prefix "alma"

/** @file ParameterTuning.idl
 * ParameterTuning's IDL File
 *  @version 1.00 Feb 5, 2004
 *  @author Fanny Cosson
 */
module telcal
{

  // This enumeration is used internally in TELCAL to select a test mode with a DataCapturer Simulator component

  enum DataModeEnum { DATACAPTURER, DC_SIMULATOR,NONE };
//  ACS_ENUM(DataModeEnum);


  struct CalibrationParameter {
    string  name;
    double  value;
    string  stringValue;
    boolean isDefinedAsString;
    string  arrayId;
    boolean on;
  };
  typedef sequence<CalibrationParameter> CalibrationParameterSequence;
  struct CalibrationParameterSeq {
    CalibrationParameterSequence calibParamSeq;
  };

  struct AntennaParameter {
    string  name;	
    double  value;
    string  stringValue;
    boolean isDefinedAsString;
    string  antennaName;
    string  arrayId;
    boolean on;
  };
  typedef sequence<AntennaParameter> AntennaParameterSequence;
  struct AntennaParameterSeq {
    AntennaParameterSequence antennaParamSeq;
  };



  //////////////////////////////////////////////////////////////////////////
  //                               Interface
  //////////////////////////////////////////////////////////////////////////
  
  /** Interface ParameterTuning is used to change the values of some
   *  parameters used by the TelCalSubsystem.
   */
  interface ParameterTuning:  ACS::ACSComponent  
  {
    /** 
     *  TelCal parameters.
     */
    void setCalibParameter(in string coeffName, in double value, in string arrayId, in boolean on) 
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    void setCalibParameterAsString(in string coeffName, in string value, in string arrayId, in boolean on) 
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    void setAntennaParameter(in string coeffName, in double value, in string antennaName, in string arrayId, in boolean on)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    void setAntennaParameterAsString(in string coeffName, in string value, in string antennaName, in string arrayId, in boolean on)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    double   getCalibParameter(in string coeffName, in string arrayId)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    string   getCalibParameterAsString(in string coeffName, in string arrayId)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    double        getAntennaParameter(in string coeffName, in string antennaName, in string arrayId)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    string        getAntennaParameterAsString(in string coeffName, in string antennaName, in string arrayId)
	raises (TelCalErrType::UnknownCoefficientEx, TelCalErrType::InvalidCoefficientEx);

    CalibrationParameterSeq    getAllCalibParameters();
    AntennaParameterSeq        getAllAntennaParameters();
    



    /** 
     *  Parameters used for TELCAL tests
     */
    void   setDataMode(in DataModeEnum dataMode);
    DataModeEnum getDataMode();

    void   setMetaDataFileName(in string filename);  
    string getMetaDataFileName();
  };

  //////////////////////////////////////////////////////////////////////////
  //                           Exceptions
  //////////////////////////////////////////////////////////////////////////

  // The exceptions raised by the ParameterTuning interface are defined in
  // the file TelCalErrType.xml 

  
};

#endif

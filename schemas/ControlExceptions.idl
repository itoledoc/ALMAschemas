#ifndef  _ControlExceptions_IDL_
#define  _ControlExceptions_IDL_
	
/*******************************************************************************
* ALMA - Atacama Large Millimiter Array
* (c) European Southern Observatory, 2003 
*
*This library is free software; you can redistribute it and/or
*modify it under the terms of the GNU Lesser General Public
*License as published by the Free Software Foundation; either
*version 2.1 of the License, or (at your option) any later version.
*
*This library is distributed in the hope that it will be useful,
*but WITHOUT ANY WARRANTY; without even the implied warranty of
*MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
*Lesser General Public License for more details.
*
*You should have received a copy of the GNU Lesser General Public
*License along with this library; if not, write to the Free Software
*Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA
*
* "@(#) $Id: AES2IDL.xslt,v 1.9 2007/05/23 08:55:56 nbarriga Exp $"
*************  THIS FILE IS AUTOMATICALLY GENERATED !!!!!!
*/

#include <acserr.idl>

#pragma prefix "alma"
 	
module ACSErr 
{
	// type
	const ACSErr::ACSErrType ControlExceptions = 10000;
}; // module ACSErr

module ControlExceptions
{
	 const ACSErr::ErrorCode CAMBError = 0;
	 const ACSErr::ErrorCode LKMError = 1;
	 const ACSErr::ErrorCode IllegalParameterError = 2;
	 const ACSErr::ErrorCode InvalidRequest = 3;
	 const ACSErr::ErrorCode SimError = 4;
	 const ACSErr::ErrorCode CDBError = 5;
	 const ACSErr::ErrorCode XmlParserError = 6;
	 const ACSErr::ErrorCode DeviceBusy = 7;
	 const ACSErr::ErrorCode ANTError = 8;
	 const ACSErr::ErrorCode INACTError = 9;
	 const ACSErr::ErrorCode GPSTimeError = 10;
	 const ACSErr::ErrorCode MasterClockError = 11;
	 const ACSErr::ErrorCode ArrayTimeError = 12;
	 const ACSErr::ErrorCode HardwareError = 13;
	 const ACSErr::ErrorCode Timeout = 14;
	 const ACSErr::ErrorCode IllegalParameter = 15;
	 const ACSErr::ErrorCode Fatal = 16;
	 const ACSErr::ErrorCode Transient = 17;
	 const ACSErr::ErrorCode Aborted = 18;
	
	// excption for type:
	exception ControlExceptionsEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	// excptions for codes:
	exception CAMBErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception LKMErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception IllegalParameterErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception InvalidRequestEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception SimErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception CDBErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception XmlParserErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception DeviceBusyEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception ANTErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception INACTErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception GPSTimeErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception MasterClockErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception ArrayTimeErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception HardwareErrorEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception TimeoutEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception IllegalParameterEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception FatalEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception TransientEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	exception AbortedEx {
		ACSErr::ErrorTrace errorTrace;	
	};
	
	
}; // module ControlExceptions

#endif

